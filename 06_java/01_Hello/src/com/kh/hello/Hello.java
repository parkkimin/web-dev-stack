/*
 ** 자바의 특징
 *1. 객체지향 프로그래밍 언어(Object-Oriented Programming, OOP) 언어
 * - 모든 기능을 "객체"라는 단위로 구성
 * - 캡슐화, 상속, 다형성, 추상화
 *2. 자돟 메모리 관리 (Garbage Collection)
 * - 사용하지 않는 객체는 JVM이 자동으로 제거
 * - 개발자가 직접 메모리 해제할 필요 없음 
 *3. 동적 로딩 지원
 * - 실행 중 필요한 클래스만 로딩
 * - 메모리 효율
 *4. 운영체제에 독립적(JVM)
 * - 자바 코드는 JVM 위에서 돌아가기 때문에 Windows,Linux 모두 실행 가능
 *5. 네트워크 & 분산 처리 지원(Java API)
 * - Socket, URL 등 네트워크 통신을 쉽게 처리
 * - 여러서버/클라이언트 작업 분산 가능 
 *6. 멀티스레드 지원(Java API)
 * - 여러 작업을 동시에 실행
 * - Thread 클래스 사용
 * 
 ** JDK > JRE > JVM
 *  JDK(Java Development Kit) :자바 개발 도구
 *  -JRE(Java Runtime Environment) : 자바 실행 환경
 *    -JVM(Java Virtual Machine): 자바 가상 머신
 *    -Java API(lib/src.zip)
 *  -개발 도구 (bin/javac, java 등)
 *  
 ** 자바 프로그램 실행 단계
 *1. 확장자가 .java인 소스파일을 작성한다.
 *2. 작성된 소스파일 자바 컴파일러(java.exe)로 컴파일하여
 * 확장자가.class인 바이트코드(기계어)로 번역한다.
 *3. 번역된 바이트코드(기계어)를 JVM의 자바 인터프리터(java.exe.)를 이용해 실행한다. 
 **/
/*
 * 패키지(package)
 * - 폴더를 만들어서 파일을 저장하고 관리하듯이 패키지를 만들어 
 * 	 클래스를 저장하고 관리한다.
 * - 패키지는 클래스를 유일하게 만들어주는 식별자 역할을 한다.
 * - 페키지가 선언되지 않으면 default 패키지에 속하게 되는데, 실무에서는 거의 사용하지 않는다.
 * */
package com.kh.hello;
/*
 * 클래스(class)
 * - 자바에서 모든 코드는 반드시 클래스 안에 존재해야 한며
 *   서로 관련된 코드들을 그룹에서 나누어 별도의 클래스로 구성한다.
 * - 클래스들이 모여 하나의 Java 프로그램을 구성한다.
 * - 클래스는 설계도이며, 이를 바탕으로 객체(인스턴스)를 생성해 사용한다.
 * */
public class Hello { // 클래스명은 클래스 파일명과 동일해야 한다.

/*
 * 메서드(method)
 * - 클래스의 기능(동작)에 해당하는 구현 부분이다.
 * - 해당 메서드 호출 시 메서드의 블럭({})에 해당하는 부분을 실행한다.
 * */

// main 메서드 (실행 메서드): 자바 프로그램 살행 시 가장 먼저 호출
// 모든 클래스가 main 메서드를 가지고 있어야 하는 건 X
// 자바 프로그램에는 main 메서드를 포함한 클래스가 반드시 하나는 있어야 실행한다.

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		System.out.println("Hello,World");
		
		/*
		 * 네이밍 규칙
		 * - 패키지명: 소문자로 작성, 회사들 간에 패키지가 서로 중복되지 않도록 회사의 도메인 이름으로 패키지를 만든다.
		 * - 클래스명: 대문자로 시작, 여러 개의 단어가 있을 때에는 단어 앞자리마다 대문자
		 * - 메서드명: 소문자로 시작, 여러 개의 단어가 있을 때에는 단어 앞자리마다 대문자
		 * - 
		 * */
	}

}
